---
# tasks file for reverse-proxy
#
# The 'nginx-proxy' image used in this file implements a reverse-proxy.
#
# For details on the what, how and why see:
#
# https://www.digitalocean.com/community/tutorials/docker-explained-how-to-containerize-and-use-nginx-as-a-proxy
# http://jasonwilder.com/blog/2014/03/25/automated-nginx-reverse-proxy-for-docker/
# https://github.com/jwilder/nginx-proxy
#

#
# Create shared data folder
#
- name: Create shared data folders
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: docker
    mode: 0770
  with_items:
    - '/{{ proxy_letsencrypt_data_path }}/nginx/certs'
    - '/{{ proxy_nginx_data_path }}/conf'

#
# Write configuration files
#
- name: Write configuration files
  copy:
    src: my_proxy.conf
    dest: '/{{ proxy_nginx_data_path }}/conf'
    owner: root
    group: docker
    mode: 0440

#
# Run '{{ reverseproxy_nginx_image }}' image
#
- name: Run '{{ reverseproxy_nginx_image }}' image
  docker_service:
    project_name:
      "dsc"
    definition:
      version: '2'
      services:

        #
        # The reverse proxy container
        #
        nginx:
          image: "{{ reverseproxy_nginx_image }}"
          container_name: reverse-proxy_nginx

          volumes:
            - "/var/run/docker.sock:/tmp/docker.sock:ro"
            - "/{{ proxy_letsencrypt_data_path }}/nginx/certs:/etc/nginx/certs:ro"
            - "/{{ proxy_nginx_data_path }}/conf:/etc/nginx/conf.d"
            - "/usr/share/nginx/html"
            - "/etc/nginx/vhost.d"

          ports:
            - "80:80"
            - "443:443"

#          environment:
#            - "ENABLE_IPV6:true"
#            - "DEFAULT_HOST=foo.bar.com"

#        #
#        # A test container, access with e.g.:
#        #  curl -H "Host: whoami.local" localhost
#        #  ...
#        #  I'm 5b129ab83266
#        #
#        whoami:
#          image: jwilder/whoami
#          container_name: whoami
#          environment:
#            - "VIRTUAL_HOST=whoami.local"
#            - "VIRTUAL_PORT=80"
#            - "VIRTUAL_PROTO=https"

          labels:
            # Add label to indicate the related server
            # (as indicated by the role base folder name)
            # The label is used by Grafana to filter container metrics
            - "container_related_server={{role_path | basename}}"

    state:
      present

# Write 'reverse-proxy_nginx.service' unit file
- name: Write 'reverse-proxy_nginx.service' unit file
  copy:
    src: "reverse-proxy_nginx.service"
    dest: "/etc/systemd/system/reverse-proxy_nginx.service"
    owner: root
    mode: 0600
